services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  inventory-api:
    build: ../src/services/inventory/Inventory.Api
    environment:
      - ASPNETCORE_URLS=http://+:8080
      # SQLite: arquivo dentro do container em /data
      - ConnectionStrings__Default=Data Source=/data/inventory.db
      # RabbitMQ para rodar em docker
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      # JWT
      - Jwt__Issuer=Desafio.Auth
      - Jwt__Audience=Desafio.Client
      - Jwt__Key=dev-super-secret-key-CHANGE-ME-32CHARS+
    volumes:
      - inventory_data:/data
    depends_on:
      - rabbitmq
    ports:
      - "8081:8080"

  sales-api:
    build: ../src/services/sales/Sales.Api
    environment:
      - ASPNETCORE_URLS=http://+:8080
      # SQLite: arquivo dentro do container em /data
      - ConnectionStrings__Default=Data Source=/data/sales.db
      # RabbitMQ e URL interna do Inventory
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - Inventory__BaseUrl=http://inventory-api:8080
      # JWT
      - Jwt__Issuer=Desafio.Auth
      - Jwt__Audience=Desafio.Client
      - Jwt__Key=dev-super-secret-key-CHANGE-ME-32CHARS+
    volumes:
      - sales_data:/data
    depends_on:
      - rabbitmq
      - inventory-api
    ports:
      - "8082:8080"

  gateway:
    build: ../src/gateway/ApiGateway
    environment:
      - ASPNETCORE_URLS=http://+:8080
    depends_on:
      - inventory-api
      - sales-api
    ports:
      - "8080:8080"

volumes:
  inventory_data:
  sales_data:
